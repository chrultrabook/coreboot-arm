Resolves compilation errors with GCC 15+ in C23 mode by:
. Adding explicit function prototypes for `g()`
. Modernizing K&R-style function declarations
. Fixing void parameter signatures
--- gmp-6.3.0/configure
+++ gmp-6.3.0/configure
@@ -6567,13 +6567,39 @@
    1666 to segfault with e.g., -O2 -mpowerpc64.  */
 
 #if defined (__GNUC__) && ! defined (__cplusplus)
-typedef unsigned long long t1;typedef t1*t2;
-void g(){}
-void h(){}
-static __inline__ t1 e(t2 rp,t2 up,int n,t1 v0)
-{t1 c,x,r;int i;if(v0){c=1;for(i=1;i<n;i++){x=up[i];r=x+1;rp[i]=r;}}return c;}
-void f(){static const struct{t1 n;t1 src[9];t1 want[9];}d[]={{1,{0},{1}},};t1 got[9];int i;
-for(i=0;i<1;i++){if(e(got,got,9,d[i].n)==0)h();g(i,d[i].src,d[i].n,got,d[i].want,9);if(d[i].n)h();}}
+typedef unsigned long long t1;
+typedef t1 *t2;
+void g(void) { }
+void h(void) { }
+static __inline__ t1 e(t2 rp, t2 up, int n, t1 v0)
+{
+  t1 c, x, r;
+  int i;
+  if (v0) {
+    c = 1;
+    for (i = 1; i < n; i++) {
+      x = up[i];
+      r = x + 1;
+      rp[i] = r;
+    }
+  }
+  return c;
+}
+void f(void)
+{
+  static const struct { t1 n; t1 src[9]; t1 want[9]; } d[] = {
+    { 1, { 0 }, { 1 } },
+  };
+  t1 got[9];
+  int i;
+  for (i = 0; i < 1; i++) {
+    if (e(got, got, 9, d[i].n) == 0)
+      h();
+    g();
+    if (d[i].n)
+      h();
+  }
+}
 #else
 int dummy;
 #endif
@@ -8186,13 +8212,39 @@
    1666 to segfault with e.g., -O2 -mpowerpc64.  */
 
 #if defined (__GNUC__) && ! defined (__cplusplus)
-typedef unsigned long long t1;typedef t1*t2;
-void g(){}
-void h(){}
-static __inline__ t1 e(t2 rp,t2 up,int n,t1 v0)
-{t1 c,x,r;int i;if(v0){c=1;for(i=1;i<n;i++){x=up[i];r=x+1;rp[i]=r;}}return c;}
-void f(){static const struct{t1 n;t1 src[9];t1 want[9];}d[]={{1,{0},{1}},};t1 got[9];int i;
-for(i=0;i<1;i++){if(e(got,got,9,d[i].n)==0)h();g(i,d[i].src,d[i].n,got,d[i].want,9);if(d[i].n)h();}}
+typedef unsigned long long t1;
+typedef t1 *t2;
+void g(void) { }
+void h(void) { }
+static __inline__ t1 e(t2 rp, t2 up, int n, t1 v0)
+{
+  t1 c, x, r;
+  int i;
+  if (v0) {
+    c = 1;
+    for (i = 1; i < n; i++) {
+      x = up[i];
+      r = x + 1;
+      rp[i] = r;
+    }
+  }
+  return c;
+}
+void f(void)
+{
+  static const struct { t1 n; t1 src[9]; t1 want[9]; } d[] = {
+    { 1, { 0 }, { 1 } },
+  };
+  t1 got[9];
+  int i;
+  for (i = 0; i < 1; i++) {
+    if (e(got, got, 9, d[i].n) == 0)
+      h();
+    g();
+    if (d[i].n)
+      h();
+  }
+}
 #else
 int dummy;
 #endif
